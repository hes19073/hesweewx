##errorCatcher Echo
##
##This program is free software; you can redistribute it and/or modify
##it under the terms of the GNU General Public License as published by
##the Free Software Foundation; either version 2 of the License, or
##(at your option) any later version.
##
##This program is distributed in the hope that it will be useful,
##but WITHOUT ANY WARRANTY; without even the implied warranty of
##MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
##GNU General Public License for more details.
##
###############################################################################
##                                                                            #
##                  WEEWX-WD CUSTOMCLIENTRAW.TXT TEMPLATE                     #
##                                                                            #
## Version: 1.2.0b1                                       Date: 1 August 2015 #
##                                                                            #
###############################################################################
##
#import datetime
##
##
## UTC string calcs
##
#set $utcString = datetime.datetime.utcfromtimestamp($current.dateTime.raw).strftime("%Y,%m,%d,%H,%M,%S")
##
## End UTC string calcs
##
##
## Date format string calcs
##
#try
    #set $dateformat=$skin_dict.Units.TimeFormats.date_f.replace("%","").replace("-","").lower()
#except
    #set $dateformat="d/m/y"
#end try
##
## End Date format string calcs
##
##
## sensorContactLost calcs
##
#set $sensorContactLost = 0
#set $rxchk = $getVar('current.rxCheckPercent.raw', 0)
#if $rxchk is not None and $rxchk == 0
    #set $sensorContactLost = 1
#end if
##
## End sensorContactLost calcs
##
##
## forecastText
##
#if $varExists('forecast_text')
  #if $forecast_text != ""
    #set $forecast_str = $forecast_text
  #elif $current($data_binding='wdsupp_binding', $max_delta=600).forecastText.exists
    #if $unit.unit_type.outTemp == 'degree_C'
      #set $forecast_str = $current($data_binding='wdsupp_binding', $max_delta=600).forecastTextMetric.raw
    #else
      #set $forecast_str = $current($data_binding='wdsupp_binding', $max_delta=600).forecastText.raw
    #end if
  #else
    #set $forecast_str = ""
  #end if
#elif $current($data_binding='wdsupp_binding', $max_delta=600).forecastText.exists
  #if $unit.unit_type.outTemp == 'degree_C'
    #set $forecast_str = $current($data_binding='wdsupp_binding', $max_delta=600).forecastTextMetric.raw
  #else
    #set $forecast_str = $current($data_binding='wdsupp_binding', $max_delta=600).forecastText.raw
  #end if
#else
  #set $forecast_str = ""
#end if
##
## End forecastText
##
##
##Beaufort wind scale calculations
##
#if $max_24h_gust_wind.knot.raw >= 64
    #set $beaufort24 = 12
#elif $max_24h_gust_wind.knot.raw >= 56
    #set $beaufort24 = 11
#elif $max_24h_gust_wind.knot.raw >= 48
    #set $beaufort24 = 10
#elif $max_24h_gust_wind.knot.raw >= 41
    #set $beaufort24 = 9
#elif $max_24h_gust_wind.knot.raw >= 34
    #set $beaufort24 = 8
#elif $max_24h_gust_wind.knot.raw >= 28
    #set $beaufort24 = 7
#elif $max_24h_gust_wind.knot.raw >= 22
    #set $beaufort24 = 6
#elif $max_24h_gust_wind.knot.raw >= 17
    #set $beaufort24 = 5
#elif $max_24h_gust_wind.knot.raw >= 11
    #set $beaufort24 = 4
#elif $max_24h_gust_wind.knot.raw >= 7
    #set $beaufort24 = 3
#elif $max_24h_gust_wind.knot.raw >= 4
    #set $beaufort24 = 2
#elif $max_24h_gust_wind.knot.raw >= 1
    #set $beaufort24 = 1
#else
    #set $beaufort24 = 0
#end if
##
##End beaufort wind scale calculations
##
#*SS|000*#{"date":"$current.dateTime.format("%H:%M")",#slurp
#try
#set $dateformat=$skin_dict.Units.TimeFormats.date_f.replace("%","").replace("-","").lower()
#except
#set $dateformat="d/m/y"
#end try
#*SS|001*#"dateFormat":"$dateformat",#slurp
#*SS|002*#"temp":"$current.outTemp.formatted",#slurp
#*SS|003*#"tempTL":"$day.outTemp.min.formatted",#slurp
#*SS|004*#"tempTH":"$day.outTemp.max.formatted",#slurp
#*SS|005*#"intemp":"$current.inTemp.formatted",#slurp
#*SS|006*#"dew":"$current.dewpoint.formatted",#slurp
#*SS|007*#"dewpointTL":"$day.dewpoint.min.formatted",#slurp
#*SS|008*#"dewpointTH":"$day.dewpoint.max.formatted",#slurp
#*SS|009*#"apptemp":"$current($data_binding='wd_binding').appTemp.formatted",#slurp
#*SS|010*#"apptempTL":"$day($data_binding='wd_binding').appTemp.min.formatted",#slurp
#*SS|011*#"apptempTH":"$day($data_binding='wd_binding').appTemp.max.formatted",#slurp
#*SS|012*#"wchill":"$current.windchill.formatted",#slurp
#*SS|013*#"wchillTL":"$day.windchill.min.formatted",#slurp
#*SS|014*#"heatindex":"$current.heatindex.formatted",#slurp
#*SS|015*#"heatindexTH":"$day.heatindex.max.formatted",#slurp
#*SS|016*#"humidex":"$current($data_binding='wd_binding').humidex.formatted",#slurp
#*SS|017*#"wlatest":"$current.windGust.formatted",#slurp
#*SS|018*#"wspeed":"$current.windSpeed.formatted",#slurp
#*SS|019*#"wgust":"$max_10_gust_wind.formatted",#slurp
#*SS|020*#"wgustTM":"$day.wind.max.formatted",#slurp
#*SS|021*#"bearing":"$current.windDir.formatted",#slurp
#*SS|022*#"avgbearing":"$current.windDir.formatted",#slurp
#*SS|023*#"press":"$current.barometer.formatted",#slurp
#*SS|024*#"pressTL":"$day.barometer.min.formatted",#slurp
#*SS|025*#"pressTH":"$day.barometer.max.formatted",#slurp
#*SS|026*#"pressL":"$alltime.barometer.min.formatted",#slurp
#*SS|027*#"pressH":"$alltime.barometer.max.formatted",#slurp
#*SS|028*#"rfall":"$day.rain.sum.formatted",#slurp
#*SS|029*#"rrate":"$current.rainRate.formatted",#slurp
#*SS|030*#"rrateTM":"$day.rainRate.max.formatted",#slurp
#*SS|031*#"hum":"$current.outHumidity.formatted",#slurp
#*SS|032*#"humTL":"$day.outHumidity.min.formatted",#slurp
#*SS|033*#"humTH":"$day.outHumidity.max.formatted",#slurp
#*SS|034*#"inhum":"$current.inHumidity.formatted",#slurp
#*SS|035*#"inhumTL":"$day.inHumidity.min.formatted",#slurp
#*SS|036*#"inhumTH":"$day.inHumidity.max.formatted",#slurp
#*SS|037*#"SensorContactLost":"$sensorContactLost",#slurp
#*SS|038*#"forecast":"$forecast_str",#slurp
#*SS|039*#"tempunit":"$unit.label.outTemp.strip(' ()')",#slurp
#*SS|040*#"windunit":"$unit.label.windSpeed.strip(' ()')",#slurp
#*SS|041*#"pressunit":"$unit.label.barometer.strip(' ()')",#slurp
#*SS|042*#"rainunit":"$unit.label.rain.strip(' ()')",#slurp
#*SS|043*#"temptrend":"$trend($time_delta=3600).outTemp.format("%+.1f")",#slurp
#*SS|044*#"TtempTL":"$day.outTemp.mintime",#slurp
#*SS|045*#"TtempTH":"$day.outTemp.maxtime",#slurp
#*SS|046*#"TdewpointTL":"$day.dewpoint.mintime",#slurp
#*SS|047*#"TdewpointTH":"$day.dewpoint.maxtime",#slurp
#*SS|048*#"TapptempTL":"$day($data_binding='wd_binding').appTemp.mintime",#slurp
#*SS|049*#"TapptempTH":"$day($data_binding='wd_binding').appTemp.maxtime",#slurp
#*SS|050*#"TwchillTL":"$day.windchill.mintime",#slurp
#*SS|051*#"TheatindexTH":"$day.heatindex.maxtime",#slurp
#*SS|052*#"TrrateTM":"$day.rainRate.maxtime",#slurp
### CHECKME
###*SS|053*#"ThourlyrainTH":"$maxHourRainTodayTime.format("%H:%M")",#slurp
###*SS|054*#"LastRainTipISO":"$last_rain.format($skin_dict.Units.TimeFormats.date_f) $last_rain.format("%H:%M")",#slurp
### CHECKME
####*SS|055*#"hourlyrainTH":"$maxHourRainToday.formatted",#slurp
#*SS|056*#"ThumTL":"$day.outHumidity.mintime",#slurp
#*SS|057*#"ThumTH":"$day.outHumidity.maxtime",#slurp
#*SS|058*#"TinhumTL":"$day.inHumidity.mintime",#slurp
#*SS|059*#"TinhumTH":"$day.inHumidity.maxtime",#slurp
#*SS|060*#"TpressTL":"$day.barometer.mintime",#slurp
#*SS|061*#"TpressTH":"$day.barometer.maxtime",#slurp
#*SS|062*#"presstrendval":"$trend($time_delta=10800).barometer.format("%+.2f")",#slurp
#*SS|063*#"Tbeaufort":"$beaufort24",#slurp
#*SS|064*#"TwgustTM":"$day.wind.maxtime",#slurp
#*SS|065*#"windTM":"$day.windSpeed.max.formatted",#slurp
#*SS|066*#"bearingTM":"$day.wind.gustdir.formatted",#slurp
#*SS|067*#"timeUTC":"$utcString",#slurp
### FIXME
#*SS|068*#"BearingRangeFrom10":"$current.windDir.formatted",#slurp
### FIXME
#*SS|069*#"BearingRangeTo10":"$current.windGustDir.formatted",#slurp
#*SS|070*#"UV":"$current.UV.formatted",#slurp
#*SS|071*#"UVTH":"$day.UV.max.formatted",#slurp
#*SS|072*#"SolarRad":"$current.radiation.formatted",#slurp
#if $current($data_binding='wdsupp_binding', $max_delta=600).maxSolarRad.exists
#*SS|073*#"CurrentSolarMax":"$current($data_binding='wdsupp_binding', $max_delta=600).maxSolarRad.formatted",#slurp
#else
#*SS|073*#"CurrentSolarMax":"0",#slurp
#end if
#*SS|074*#"SolarTM":"$day.radiation.max.formatted",#slurp
#*SS|075*#"domwinddir":"$day.wind.vecdir.ordinal_compass",#slurp
#*SS|076*#"WindRoseData":$windroseData,#slurp
#*SS|077*#"cloudbasevalue":"$cloudbase.meter.formatted",#slurp
#*SS|078*#"cloudbaseunit":"m",#slurp
#*SS|079*#"windrun":"$day_windrun.formatted",#slurp
#*SS|080*#"version":"$station.version",#slurp
#*SS|081*#"build":"00",#slurp
#*SS|082*#"ver":"$Extras.SkinVersion.Version.strip"}#slurp

